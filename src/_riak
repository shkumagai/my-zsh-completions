#compdef riak

_riak () {
  local -a _1st_arguments
  _1st_arguments=(
    start:'Starts the Riak node in the background'
    stop:'Stops the running Riak node'
    restart:'Stops and then starts the running Riak node without exiting Erlang VM'
    reboot:'Stops and then starts the running Riak node, exiting Erlang VM'
    ping:'Checks that the Riak node is running'
    console:'Starts the Riak node in the foreground with Erlang shell'
    attach:'Attaches to the console of a Riak node running in the background, with Erlang shell'
    chkconfig:'Checks whether the app.config is valid'
    # escript:''
    # getpid:'Show current pid of Riak node'
    # version:'Show version'
  )

  local context state line expl
  _arguments \
    '*:: :->commands' && return 0

  if (( CURRENT == 1 )); then
    _describe -t riak-commands 'riak command' _1st_arguments
    return
  fi
}

_riak "$@"

# Local variables:
# mode: shell-script
# sh-basic-offset: 2
# sh-indent-comment: t
# indent-tabs-mode: nil
# End:
# ex: sw=2 ts=2 et filetype=sh
